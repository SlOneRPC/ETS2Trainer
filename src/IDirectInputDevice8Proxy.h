/**************************************************************
 *
 * Solution    : Euro Truck Simulator 2 Multiplayer
 * Project     : Client Core
 * Licence     : See LICENSE in the top level directory
 * File		   : IDirectInputDevice8Proxy.h
 * Developers  : RootKiller <rootkiller.programmer@gmail.com>
 *
 ***************************************************************/
#pragma once
#include "pch.h"
#define DIRECTINPUT_VERSION		0x0800

enum eDIDeviceType
{
	DIDEVICE_TYPE_UNKNOWN,
	DIDEVICE_TYPE_MOUSE,
	DIDEVICE_TYPE_KEYBOARD,
	DIDEVICE_TYPE_JOYSTICK
};

class IDirectInputDevice8Proxy : public IDirectInputDevice8
{
private:
	IDirectInputDevice8W *		m_pDevice;
	eDIDeviceType				m_DeviceType;
public:

	IDirectInputDevice8Proxy(IDirectInputDevice8 * pDevice, eDIDeviceType DeviceType);

	/*** IUnknown methods ***/
	HRESULT STDMETHODCALLTYPE QueryInterface(REFIID riid, LPVOID * ppvObj);
	ULONG STDMETHODCALLTYPE AddRef();
	ULONG STDMETHODCALLTYPE Release();

	/*** IDirectInputDevice8A methods ***/
	HRESULT STDMETHODCALLTYPE GetCapabilities(LPDIDEVCAPS p0);
	HRESULT STDMETHODCALLTYPE EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKW p0, LPVOID p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE GetProperty(REFGUID rguid, LPDIPROPHEADER p1);
	HRESULT STDMETHODCALLTYPE SetProperty(REFGUID rguid, LPCDIPROPHEADER p1);
	HRESULT STDMETHODCALLTYPE Acquire();
	HRESULT STDMETHODCALLTYPE Unacquire();
	HRESULT STDMETHODCALLTYPE GetDeviceState(DWORD p0, LPVOID p1);
	HRESULT STDMETHODCALLTYPE GetDeviceData(DWORD p0, LPDIDEVICEOBJECTDATA p1, LPDWORD p2, DWORD p3);
	HRESULT STDMETHODCALLTYPE SetDataFormat(LPCDIDATAFORMAT p0);
	HRESULT STDMETHODCALLTYPE SetEventNotification(HANDLE p0);
	HRESULT STDMETHODCALLTYPE SetCooperativeLevel(HWND p0, DWORD p1);
	HRESULT STDMETHODCALLTYPE GetObjectInfo(LPDIDEVICEOBJECTINSTANCEW p0, DWORD p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE GetDeviceInfo(LPDIDEVICEINSTANCEW p0);
	HRESULT STDMETHODCALLTYPE RunControlPanel(HWND p0, DWORD p1);
	HRESULT STDMETHODCALLTYPE Initialize(HINSTANCE p0, DWORD p1, REFGUID rguid);
	HRESULT STDMETHODCALLTYPE CreateEffect(REFGUID rguid, LPCDIEFFECT p1, LPDIRECTINPUTEFFECT * p2, LPUNKNOWN p3);
	HRESULT STDMETHODCALLTYPE EnumEffects(LPDIENUMEFFECTSCALLBACKW p0, LPVOID p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE GetEffectInfo(LPDIEFFECTINFOW p0, REFGUID rguid);
	HRESULT STDMETHODCALLTYPE GetForceFeedbackState(LPDWORD p0);
	HRESULT STDMETHODCALLTYPE SendForceFeedbackCommand(DWORD p0);
	HRESULT STDMETHODCALLTYPE EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK p0, LPVOID p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE Escape(LPDIEFFESCAPE p0);
	HRESULT STDMETHODCALLTYPE Poll();
	HRESULT STDMETHODCALLTYPE SendDeviceData(DWORD p0, LPCDIDEVICEOBJECTDATA p1, LPDWORD p2, DWORD p3);
	HRESULT STDMETHODCALLTYPE EnumEffectsInFile(LPCWSTR p0, LPDIENUMEFFECTSINFILECALLBACK p1, LPVOID p2, DWORD p3);
	HRESULT STDMETHODCALLTYPE WriteEffectToFile(LPCWSTR p0, DWORD p2, LPDIFILEEFFECT p3, DWORD p4);
	HRESULT STDMETHODCALLTYPE BuildActionMap(LPDIACTIONFORMATW p0, LPCWSTR p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE SetActionMap(LPDIACTIONFORMATW p0, LPCWSTR p1, DWORD p2);
	HRESULT STDMETHODCALLTYPE GetImageInfo(LPDIDEVICEIMAGEINFOHEADERW p0);
};